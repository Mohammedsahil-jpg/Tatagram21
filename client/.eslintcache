[{"D:\\Desktop\\web dev projects\\Instagram\\client\\src\\index.js":"1","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\reportWebVitals.js":"2","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\App.js":"3","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\signup.js":"4","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\home.js":"5","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\Navbar.js":"6","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\Userprofile.js":"7","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\mysubpost.js":"8","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\signin.js":"9","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\CreatePost.js":"10","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\story.js":"11","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\Editpost.js":"12","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\Followreq.js":"13","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\Profileupdate.js":"14","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\Newpassword.js":"15","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\Viewstory.js":"16","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\Resetpassword.js":"17","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\Emailvalidate.js":"18","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\Userposts.js":"19","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\reducers\\userReducer.js":"20","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\profile.js":"21","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\Messages.js":"22","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\ViewMessage.js":"23"},{"size":500,"mtime":499162500000,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":499162500000,"results":"26","hashOfConfig":"25"},{"size":3787,"mtime":1613099571955,"results":"27","hashOfConfig":"25"},{"size":4613,"mtime":1611848555867,"results":"28","hashOfConfig":"25"},{"size":13700,"mtime":1613827533401,"results":"29","hashOfConfig":"25"},{"size":4538,"mtime":1613053050998,"results":"30","hashOfConfig":"25"},{"size":7374,"mtime":1611647722247,"results":"31","hashOfConfig":"25"},{"size":10163,"mtime":1611911056838,"results":"32","hashOfConfig":"25"},{"size":2609,"mtime":1611931485090,"results":"33","hashOfConfig":"25"},{"size":4408,"mtime":1613826620946,"results":"34","hashOfConfig":"25"},{"size":2569,"mtime":1616818464903,"results":"35","hashOfConfig":"25"},{"size":2433,"mtime":1611552224448,"results":"36","hashOfConfig":"25"},{"size":3941,"mtime":1611552237469,"results":"37","hashOfConfig":"25"},{"size":2550,"mtime":1611552267747,"results":"38","hashOfConfig":"25"},{"size":1819,"mtime":1611838988225,"results":"39","hashOfConfig":"25"},{"size":5530,"mtime":1611556295238,"results":"40","hashOfConfig":"25"},{"size":1678,"mtime":1611914369332,"results":"41","hashOfConfig":"25"},{"size":1397,"mtime":1612172782212,"results":"42","hashOfConfig":"25"},{"size":11001,"mtime":1611911293937,"results":"43","hashOfConfig":"25"},{"size":695,"mtime":1611067993242,"results":"44","hashOfConfig":"25"},{"size":6018,"mtime":1611551998723,"results":"45","hashOfConfig":"25"},{"size":2077,"mtime":1613118859579,"results":"46","hashOfConfig":"25"},{"size":4257,"mtime":1614691632707,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1n0e3v2",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"50"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"50"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"50"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"50"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"105","usedDeprecatedRules":"50"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"50"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"50"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"115"},"D:\\Desktop\\web dev projects\\Instagram\\client\\src\\index.js",[],["116","117"],"D:\\Desktop\\web dev projects\\Instagram\\client\\src\\reportWebVitals.js",[],"D:\\Desktop\\web dev projects\\Instagram\\client\\src\\App.js",["118","119"],"// \"proxy\": \"http://localhost:5000\"\n\n\nimport React, { useReducer, createContext, useEffect, useContext } from 'react'\nimport Navbar from './components/Navbar'\nimport './App.css'\nimport { BrowserRouter, Route, useHistory, Switch } from 'react-router-dom'\nimport Home from './components/screens/home'\nimport Signin from './components/screens/signin'\nimport Profile from './components/screens/profile'\nimport Signup from './components/screens/signup'\nimport CreatePost from './components/screens/CreatePost'\nimport Userprofile from './components/screens/Userprofile'\nimport { initialState, reducer } from './components/reducers/userReducer'\nimport Mysub from './components/screens/mysubpost'\nimport Story from './components/screens/story'\nimport Profileupdate from './components/screens/Profileupdate'\nimport Editpost from './components/screens/Editpost'\nimport Followreq from './components/screens/Followreq'\nimport Userposts from './components/screens/Userposts'\nimport Viewstory from './components/screens/Viewstory'\nimport Resetpassword from './components/screens/Resetpassword'\nimport NewPassword from './components/screens/Newpassword'\nimport Emailvalidate from './components/screens/Emailvalidate'\nimport Messages from './components/screens/Messages'\nimport ViewMessage from './components/screens/ViewMessage'\nexport const UserContext = createContext()\n\n\nconst Routing = () => {\n  \n  const { state, dispatch } = useContext(UserContext)\n  const history = useHistory()\n \n  useEffect(() => {\n    fetch('/userdata', {\n      headers: {\n        'Authorization': 'Bearer ' + localStorage.getItem('jwt')\n      }\n    }).then(res => res.json())\n      .then(user => {\n        localStorage.setItem(\"user\", JSON.stringify(user))\n      })\n     const user = JSON.parse(localStorage.getItem('user'))\n      if (user && user.name) {\n        dispatch({ type: 'USER', payload: user })\n        history.push('/home')\n      }else{\n        if(!history.location.pathname.startsWith('/resetpassword') && !history.location.pathname.startsWith('/verification')){\n          history.push('/sigin')\n        }\n        }\n     \n  }, [])\n\n  return (\n    <Switch>\n      <Route path=\"/home\">\n        <Home />\n      </Route>\n      <Route path=\"/signin\">\n        <Signin />\n      </Route>\n      <Route exact path=\"/profile\">\n        <Profile />\n      </Route>\n      <Route path=\"/signup\">\n        <Signup />\n      </Route>\n      <Route path=\"/CreatePost\">\n        <CreatePost />\n      </Route>\n      <Route path=\"/profile/:userid\">\n        <Userprofile />\n      </Route>\n      <Route path=\"/mysubpost\">\n        <Mysub />\n      </Route>\n      <Route path=\"/story\">\n        <Story />\n      </Route>\n      <Route path=\"/UpdateProfile\">\n        <Profileupdate />\n      </Route>\n      <Route path=\"/edit/:id\">\n        <Editpost />\n      </Route>\n      <Route path=\"/followreq\">\n        <Followreq />\n      </Route>\n      <Route path=\"/userposts/:userid\">\n        <Userposts />\n      </Route>\n      <Route path=\"/viewstory/:userid\">\n        <Viewstory />\n      </Route>\n      <Route exact path=\"/resetpassword\">\n        <Resetpassword />\n      </Route>\n      <Route path=\"/resetpassword/:token\">\n        <NewPassword />\n      </Route>\n      <Route path=\"/verification/:emailtoken\">\n        <Emailvalidate />\n      </Route>\n      <Route path=\"/message\">\n        <Messages />\n      </Route>\n      <Route path=\"/viewmessage/:id\">\n        <ViewMessage />\n      </Route>\n    </Switch>\n  )\n}\n\n\nfunction App() {\n  const [state, dispatch] = useReducer(reducer, initialState)\n  return (\n    //exact is used to avoid / problem\n    <UserContext.Provider value={{ state: state, dispatch: dispatch }}>\n      <BrowserRouter>\n        <Navbar />\n        <Routing />\n      </BrowserRouter>\n    </UserContext.Provider>\n  )\n}\n\nexport default App;\n","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\signup.js",["120","121","122","123","124","125"],"import React, { useEffect, useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\n//we will get cors error as our react app is running in diff server\r\n//we can install cors-npm package or get proxy from create react app nd paste it in package.json in reactapp\r\n//to add conditions for email use regex\r\nconst Signup = () => {\r\n    const history = useHistory()\r\n    const [name, setName] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [email, setEmail] = useState(\"\")\r\n    const [image, Setimage] = useState()\r\n    const [url, setUrl] = useState()\r\n    // useEffect(() => {\r\n    //     if (url) {\r\n    //         Signin()\r\n    //     }\r\n    // }, [url])\r\n    //once signin button is clicked\r\n    // const Profilepic = () => {\r\n    //     const data = new FormData();\r\n    //     data.append('file', image)\r\n    //     data.append('upload_preset', 'insta-clone')\r\n    //     data.append('cloud_name', 'sahil-projects')\r\n    //     fetch('https://api.cloudinary.com/v1_1/sahil-projects/image/upload', {  //taken from cloudiary\r\n    //         method: 'post',\r\n    //         body: data\r\n    //     })\r\n    //         .then(response => response.json())\r\n    //         .then(result => {\r\n    //             //console.log(result.url)\r\n    //             setUrl(result.url);\r\n    //         })\r\n    //         .catch(error => {\r\n    //             console.error('Error:', error);\r\n    //         });\r\n\r\n    // }\r\n    const PostData = () => {\r\n        if (!/^[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)) {\r\n            M.toast({ html: \"Invalid MailId\", classes: \"#c62828 red darken-3\" })\r\n            return //otherwise it will show error nd start executing next\r\n        }\r\n        fetch(\"/signup\", {\r\n            method: \"post\",\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({\r\n                name,\r\n                password,\r\n                email,\r\n                // pic: url,\r\n                privacy: \"private\"\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n                }\r\n                else {\r\n                    M.toast({ html: data.message, classes: \"#388e3c green darken-2\" })\r\n                }\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    // const PostData = () => {\r\n    //     if (image) {\r\n    //         Profilepic()\r\n    //     }\r\n    //     else {\r\n    //         Signin()\r\n    //     }\r\n    // }\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n                <h2 className=\"signin-header\">Instagram</h2>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"name\"\r\n                    value={name}\r\n                    onChange={(e) => {\r\n                        setName(e.target.value)\r\n                    }}\r\n                />\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => {\r\n                        setEmail(e.target.value)\r\n                    }}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => {\r\n                        setPassword(e.target.value)\r\n                    }}\r\n                />\r\n                {/* <div class=\"file-field input-field\">\r\n                    <div class=\"btn #1e88e5 blue darken-1\">\r\n                        <span>Upload Image</span>\r\n                        <input type=\"file\"\r\n                            onChange={(e) => {\r\n                                Setimage(e.target.files[0])\r\n                            }}\r\n                        />\r\n                    </div>\r\n                    <div class=\"file-path-wrapper\">\r\n                        <input class=\"file-path validate\" type=\"text\" />\r\n                    </div>\r\n                </div> */}\r\n                <button className=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => PostData()}>SignUp</button>\r\n                <h5>\r\n                    <Link to=\"/signin\">Already have an account?</Link>\r\n                </h5>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Signup","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\home.js",["126","127","128","129","130","131","132","133","134","135","136","137","138","139","140"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { UserContext } from '../../App'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\nconst Home = () => {\r\n    const history = useHistory()\r\n    const { state, dispatch } = useContext(UserContext)\r\n    const [data, setData] = useState([])\r\n    const [sure, Setsure] = useState(false)\r\n    const [userstory, Setuserstory] = useState('https://res.cloudinary.com/sahil-projects/image/upload/v1610541797/nouser_boaixh.jpg')\r\n    const [comment, setComment] = useState(\"\")\r\n    const [like, setlike] = useState(false)\r\n    const [inputvalue, setinputvalue] = useState(\"\")\r\n    useEffect(() => {\r\n        fetch('/allpost', {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                setData(result.posts)\r\n            })\r\n        fetch('/userdata', {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                localStorage.setItem(\"user\", JSON.stringify(data))\r\n                dispatch({ type: \"Update\", payload: { request: data.request } })\r\n            })\r\n        fetch('/getStory', {\r\n            method: 'get',\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(mystory => {\r\n                Setuserstory(mystory.story)\r\n\r\n            })\r\n\r\n    }, [])\r\n    const Likepost = (id) => {\r\n        setlike(true)\r\n        fetch('/like', {\r\n            method: \"put\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                //result.likes = Array.from(new Set(result.likes.map(item=>item)))\r\n                const newData = data.map(items => {\r\n                    if (items._id == result._id) {\r\n                        return result\r\n                    } else {\r\n                        return items\r\n                    }\r\n                })\r\n                setData(newData)\r\n                setlike(false)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    const Unlikepost = (id) => {\r\n        setlike(false)\r\n        fetch('/unlike', {\r\n            method: \"put\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.map(items => {\r\n                    if (items._id == result._id) {\r\n                        return result\r\n                    } else {\r\n                        return items\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const Comment = (id) => {\r\n       \r\n        if(comment !== \"\"){\r\n        fetch('/comments', {\r\n            method: \"put\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                text: comment,\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.map(items => {\r\n                    if (items._id == result._id) {\r\n\r\n                        return result\r\n                    } else {\r\n                        return items\r\n                    }\r\n                })\r\n                setData(newData)\r\n               setComment(\"\")\r\n               setinputvalue(\"\")\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n}\r\n    const Deletepost = (postId) => {\r\n        fetch(`/deletepost/${postId}`, {\r\n            method: 'delete',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.filter(items => {\r\n                    return items._id !== result._id\r\n                })\r\n                setData(newData)\r\n            })\r\n\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n\r\n    }\r\n\r\n    const Decomment = (id, commentid) => {\r\n        fetch('/decomments', {\r\n            method: \"put\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id,\r\n                commentId: commentid\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.map(items => {\r\n                    if (items._id == result._id) {\r\n                        return result\r\n                    } else {\r\n                        return items\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    const Suredelete = () => {\r\n\r\n        sure ? Setsure(false) : Setsure(true)\r\n\r\n    }\r\n    const Dontdelete = () => {\r\n\r\n        sure ? Setsure(false) : Setsure(true)\r\n\r\n    }\r\n\r\n    const UploadStory = () => {\r\n        history.push('/story')\r\n    }\r\n\r\n    const Changeview = (userid) => {\r\n        history.push(`/viewstory/${userid}`)\r\n    }\r\n    return (\r\n\r\n        <div className=\"home\">\r\n            <div className=\"storybackground\">\r\n                {\r\n                    userstory\r\n                        ?\r\n                        <img onClick={() => Changeview(state._id)} className=\"story\"\r\n                            src={userstory} />\r\n                        :\r\n                        <img onClick={() => Changeview(state._id)} className=\"story\"\r\n                            src={\"https://res.cloudinary.com/sahil-projects/image/upload/v1610541797/nouser_boaixh.jpg\"}\r\n                        />\r\n                }\r\n                <i className=\"material-icons\" style={{ position: 'absolute', color: 'green', bottom: '50px', right: '0px', cursor: \"pointer\" }}\r\n                    onClick={() => { UploadStory() }}\r\n                >camera_alt</i>\r\n\r\n            </div>\r\n            <hr style={{ margin: '50px' }}></hr>\r\n            {\r\n                data.map(items => {\r\n\r\n                    return (\r\n                        <>\r\n                            {\r\n                                items.privacy == \"public\"\r\n                                    ?\r\n                                    <div className=\"card home-card\">\r\n                                        <div style={{ display: 'flex' }}>\r\n\r\n                                            <img style={{ width: '50px', height: '50px', borderRadius: '50%' }} src={items.Userprofile} />\r\n                                            <h5 style={{ height: \"50px\", margin: '10px' }}><Link to={items.postedBy._id !== state._id ? `/profile/${items.postedBy._id}` : \"/profile\"}>{items.postedBy.name}</Link>\r\n                                                {\r\n                                                    items.postedBy._id == state._id\r\n                                                        ?\r\n                                                        <Link to={`/edit/${items._id}`}><i className=\"material-icons\" style={{ marginLeft: \"7px\", float: \"right\", cursor: \"pointer\" }}>create</i></Link>\r\n                                                        :\r\n                                                        \"\"\r\n                                                }\r\n\r\n                                                {items.postedBy._id === state._id\r\n                                                    && <i style={{ position: 'absolute', right: '0', top: '10px', cursor: 'pointer', display: 'flex', margin: '10px' }} className=\"material-icons\"\r\n                                                        onClick={() => { Suredelete() }} >delete\r\n                          {\r\n                                                            sure\r\n                                                                ?\r\n                                                                <button class=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => Deletepost(items._id)}>Confirm</button>\r\n                                                                :\r\n                                                                \"\"\r\n                                                        }\r\n                                                        {\r\n                                                            sure\r\n                                                                ?\r\n                                                                <button style={{ marginLeft: '5px' }} class=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => Dontdelete()}>Cancel</button>\r\n                                                                :\r\n                                                                \"\"\r\n                                                        }\r\n\r\n                                                    </i>\r\n\r\n                                                }\r\n\r\n                                            </h5>\r\n                                        </div>\r\n                                        <div className='card-image'>\r\n                                            <img\r\n                                                src={items.photo}\r\n                                            />\r\n                                        </div>\r\n                                        <div className='card-content' >\r\n                                            <i className=\"material-icons\" style={{ color: 'red' }}>favorite</i>\r\n                                            {items.likes.includes(state._id) || like\r\n                                                ?\r\n                                                <i className=\"material-icons\" style={{ cursor: \"pointer\" }} onClick={() => { Unlikepost(items._id) }}>thumb_down</i>\r\n                                                :\r\n                                                <i className=\"material-icons\" style={{ cursor: \"pointer\" }} onClick={() => { Likepost(items._id) }}>thumb_up</i>\r\n                                            }\r\n                                            <h5>{items.likes.length} likes</h5>\r\n                                            <h5>{items.title}</h5>\r\n                                            <p>{items.body}</p>\r\n                                            <div className=\"comments\">\r\n                                                {\r\n                                                    items.comments.map(record => {\r\n                                                        if (record.text != \"\" && record.postedBy._id == state._id) {\r\n                                                            return (\r\n                                                                <h6><i style={{ float: 'left', cursor: 'pointer' }} className=\"material-icons\" onClick={() => { Decomment(items._id, record._id) }}>delete</i><span>{record.postedBy.name} </span>-- {record.text}</h6>\r\n                                                            )\r\n                                                        } else if (record.text != \"\") {\r\n                                                            return (\r\n                                                                <h6><span>{record.postedBy.name} </span>-- {record.text}</h6>\r\n                                                            )\r\n                                                        }\r\n\r\n                                                    })\r\n                                                }\r\n                                            </div>\r\n\r\n                                            <div style={{ display: 'flex' }}>\r\n\r\n                                                <input\r\n                                                    type=\"text\"\r\n                                                    placeholder=\"add a comment\"\r\n                                                    value={inputvalue}\r\n                                                    onChange={(e) => { setComment(e.target.value) }}\r\n                                                    onClick={() => { setinputvalue() }}\r\n                                                />\r\n                                                <i style={{ cursor: 'pointer' }} class=\"material-icons\" onClick={() => { Comment(items._id) }}>send</i>\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                    :\r\n                                    \"\"\r\n                            }\r\n                        </>\r\n                    )\r\n                })\r\n\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Home","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\Navbar.js",["141"],"import React, { useContext, useState, useRef, useEffect } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport { UserContext } from '../App'\r\nimport M from 'materialize-css'\r\n\r\nconst Navbar = () => {\r\n  const searchModal = useRef(null)\r\n  const history = useHistory()\r\n  const { state, dispatch } = useContext(UserContext)\r\n  const [hamburger, sethamburger] = useState(true)\r\n  const [floatNav, setfloatNav] = useState(true)\r\n  const [searchUser,setsearchUser] = useState('')\r\n  const [Userdetails,setUserdetails] = useState([])\r\n  useEffect(() => {\r\n    M.Modal.init(searchModal.current)\r\n  }, [])\r\n\r\n  const Hamburger = () => {\r\n    sethamburger(false)\r\n    setfloatNav(false)\r\n  }\r\n  const Hamburgerclose = () => {\r\n    sethamburger(true)\r\n    setfloatNav(true)\r\n  }\r\n\r\n  const Searchuser = (query)=>{\r\n    setsearchUser(query)\r\n    if(searchUser!==''){\r\n      setUserdetails([])\r\n    fetch('/search-user',{\r\n      method:'post',\r\n      headers:{\r\n        'Content-Type':'application/json'\r\n      },\r\n      body:JSON.stringify({\r\n        query\r\n      })\r\n    }).then(res=>res.json())\r\n    .then(result=>{\r\n      setUserdetails(result.user)\r\n    })\r\n  }\r\n  }\r\n\r\n  const renderlist = () => {\r\n    const user = JSON.parse(localStorage.getItem('user'))\r\n    if (state && user.name && !history.location.pathname.startsWith('/resetpassword') && !history.location.pathname.startsWith('/signin')) {\r\n      return [\r\n        <li><Link style={{ fontSize: \"20px\" }} to=\"/profile\" > <i className=\"material-icons\" >account_circle</i></Link></li>,\r\n        <li><Link style={{ fontSize: \"20px\" }} to=\"/CreatePost\" ><i className=\"material-icons\" >add_circle</i></Link></li>,\r\n        <li><Link style={{ fontSize: \"20px\" }} to=\"/mysubpost\" ><i className=\"material-icons\" >tag_faces</i></Link></li>,\r\n        <li><Link style={{ fontSize: \"20px\" }} to=\"/followreq\" ><div style={{ display: \"flex\" }}><i className=\"material-icons\" >notifications</i><h6 style={{ float: \"right\" }}>{state && state.request ? state.request.length : \"\"}</h6></div></Link></li>,\r\n        <li><i data-target=\"modal1\" className=\"material-icons modal-trigger\" style={{ fontSize: \"20px\", color: \"black\", marginLeft: '3px',cursor:'pointer' }} >search</i></li>,\r\n        <li><Link style={{ fontSize: \"20px\" }} to=\"/message\" ><i className=\"material-icons\" >chat</i></Link></li>,\r\n        <li><button className=\"btn waves-effect waves-light #1e88e5 blue darken-1\" style={{margin:'5px'}} onClick={() => {\r\n          history.push('/signin')\r\n          localStorage.clear()\r\n          dispatch({ type: 'clear' })\r\n        }}>Log Out </button></li>,\r\n\r\n      ]\r\n    } else {\r\n      return [\r\n        <li><Link to=\"/signin\">Signin</Link></li>,\r\n        <li><Link to=\"/signup\">Signup</Link></li>\r\n      ]\r\n    }\r\n\r\n  }\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-wrapper wrapper\">\r\n        <Link to={state ? \"/home\" : '/signin'} className=\"brand\">Instagram</Link>\r\n        <ul id=\"nav-mobile\" className={floatNav ? \"right\" : \"floatNav\"} style={{ flexWrap: \"wrap\" }}>\r\n          {renderlist()}\r\n        </ul>\r\n        {\r\n          hamburger\r\n            ?\r\n            <i className=\"material-icons hamburger\" onClick={() => Hamburger()}>dehaze</i>\r\n            :\r\n            <i className=\"material-icons hamburger\" onClick={() => Hamburgerclose()}>close</i>\r\n        }\r\n      </div>\r\n      <div id=\"modal1\" className=\"modal\" ref={searchModal}>\r\n        <div className=\"modal-content\" style={{ color: 'black' }}>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"searchuser\"\r\n            value={searchUser}\r\n            onChange={(e) => {\r\n              Searchuser(e.target.value)\r\n            }}\r\n          />\r\n            <ul class=\"collection\" >\r\n              {\r\n                Userdetails\r\n                ?\r\n                Userdetails.map(items=>{\r\n                  return  <Link to={state && state._id !== items._id ? '/profile/'+items._id : '/profile'}><li  onClick={ ()=>{\r\n                    M.Modal.getInstance(searchModal.current).close()\r\n                    setsearchUser('')\r\n                  }} class=\"collection-item\" style={{width:\"120%\",margin:'5px'}}>{items.email}</li></Link>\r\n                })\r\n                :\r\n                \"loading\"\r\n              }\r\n           </ul>\r\n        </div>\r\n        <div className=\"modal-footer\">\r\n          <a className=\"modal-close waves-effect waves-green btn-flat\" onClick={()=>setsearchUser('')}>Agree</a>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  )\r\n}\r\nexport default Navbar;","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\Userprofile.js",["142","143","144","145","146","147"],"import React, { useContext, useEffect, useState } from 'react'\r\n\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { UserContext } from '../../App';\r\n\r\nconst UserProfile = () => {\r\n    const history = useHistory()\r\n    const { state, dispatch } = useContext(UserContext)\r\n    const [UserProfile, Setuserprofile] = useState(null)\r\n    const [requser, Setrequser] = useState([])\r\n    const { userid } = useParams();\r\n    const [showfollow, Setfollowshow] = useState()\r\n    console.log(UserProfile)\r\n    useEffect(() => {\r\n\r\n        fetch(`/user/${userid}`, {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                Setuserprofile(result)\r\n\r\n            })\r\n    }, [requser])\r\n    const Followuser = () => {\r\n        fetch('/reqfollow', {\r\n            method: 'put',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                followid: userid\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                Setrequser(data.requestuser)\r\n                Setfollowshow(data.requestuser.request.includes(state._id) ? false : true)\r\n            })\r\n\r\n    }\r\n    const Unfollowrequser = () => {\r\n        fetch('/unreqfollow', {\r\n            method: 'put',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                followid: userid\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                Setrequser(data.requestuser)\r\n                Setfollowshow(true)\r\n            })\r\n    }\r\n    const UnFollowuser = () => {\r\n        fetch('/unfollow', {\r\n            method: 'put',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                followid: userid\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                dispatch({ type: \"Updatefollower\", payload: { following: data.following, followers: data.followers } })\r\n                localStorage.setItem(\"user\", JSON.stringify(data))\r\n                history.push('/mysubpost')\r\n            })\r\n    }\r\n\r\n    const Pushtouserpost = () => {\r\n        history.push(`/userposts/${userid}`)\r\n    }\r\n    return (\r\n        <>\r\n            {\r\n                UserProfile && requser\r\n                    ?\r\n                    <div style={{\r\n                        maxWidth: '550px',\r\n                        margin: '0px auto'\r\n                    }}>\r\n                        <div style={{\r\n                            display: 'flex',\r\n                            justifyContent: 'space-around',\r\n                            margin: \"20px\",\r\n                            borderBottom: '2px solid grey',\r\n                        }}>\r\n                            {\r\n                                UserProfile.user.privacy == \"public\" || UserProfile.user.followers.includes(state._id)\r\n                                    ?\r\n                                    <img style={{ width: \"140px\", height: \"140px\", borderRadius: \"50%\", marginRight: '10px' }}\r\n                                        src={UserProfile.user.photo}\r\n                                        alt=\"\" />\r\n                                    :\r\n                                    <img style={{ width: \"140px\", height: \"140px\", borderRadius: \"50%\", marginRight: '10px' }}\r\n                                        src=\"https://res.cloudinary.com/sahil-projects/image/upload/v1610541797/nouser_boaixh.jpg\"\r\n                                        alt=\"\" />\r\n\r\n                            }\r\n                            <div className=\"Profile\">\r\n                                <div>\r\n                                    <h4>{UserProfile.user.name}</h4>\r\n                                    <h6>{UserProfile.user.email}</h6>\r\n                                </div>\r\n                                <div style={{\r\n                                    display: 'flex',\r\n                                    justifyContent: 'space-around',\r\n                                    width: '110%',\r\n                                    flexWrap: \"wrap\",\r\n                                    marginBottom: \"10px\"\r\n                                }}>\r\n                                    <h6>{UserProfile.posts.length} posts</h6>\r\n                                    <h6>{UserProfile.user.followers.length} Followers</h6>\r\n                                    <h6>{UserProfile.user.following.length} Following</h6>\r\n                                    {\r\n                                        state.following && state.following.includes(UserProfile.user._id)\r\n                                            ?\r\n                                            <div>\r\n                                                <button class=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => UnFollowuser()}>UNFOLLOW </button>\r\n                                            </div>\r\n                                            :\r\n                                            <div className=\"Followbtn\">\r\n                                                {\r\n                                                    showfollow || !UserProfile.user.request.includes(state._id)\r\n                                                        ?\r\n                                                        <button class=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => Followuser()}>FOLLOW </button>\r\n                                                        :\r\n                                                        <button class=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => Unfollowrequser()}>requested </button>\r\n                                                }\r\n                                            </div>\r\n                                    }\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"Gallery\">\r\n                            {\r\n                                UserProfile.user.privacy == \"public\" || state && state.following.includes(UserProfile.user._id)\r\n                                    ?\r\n                                    UserProfile.posts.map(items => {\r\n\r\n                                        return (\r\n\r\n                                            <img onClick={() => Pushtouserpost()} style={{ width: '150px', height: '200px' }} className=\"items\" keys={items._id} src={items.photo} />\r\n                                        )\r\n\r\n                                    })\r\n                                    :\r\n                                    \"This account is private Follow to see their posts\"\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                    : \"loading....\"\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UserProfile","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\mysubpost.js",["148","149","150","151","152","153","154","155","156","157","158"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { UserContext } from '../../App'\r\nimport { Link, useHistory } from 'react-router-dom'\r\n\r\n\r\nconst Mysub = () => {\r\n    const { state } = useContext(UserContext)\r\n    const [data, setData] = useState([])\r\n    const [comment, setComment] = useState(\"\")\r\n    const [userstory, Setuserstory] = useState()\r\n    const history = useHistory()\r\n    const [inputvalue, setinputvalue] = useState()\r\n    const [like, setlike] = useState(false)\r\n    useEffect(() => {\r\n        fetch('/mysubpost', {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                setData(result.posts)\r\n            })\r\n        fetch('/friendstory', {\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            },\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const friendstory = result;\r\n                const updatedfriendstory = Array.from(new Set(friendstory.map(a => a.postedBy._id)))\r\n                    .map(id => {\r\n                        return friendstory.find(a => a.postedBy._id === id)\r\n                    })\r\n                Setuserstory(updatedfriendstory)\r\n            })\r\n\r\n    }, [])\r\n    const Likepost = (id) => {\r\n        setlike(true)\r\n        fetch('/like', {\r\n            method: \"put\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.map(items => {\r\n                    if (items._id == result._id) {\r\n                        return result\r\n                    } else {\r\n                        return items\r\n                    }\r\n                })\r\n                setData(newData)\r\n                setlike(false)\r\n            })\r\n    }\r\n    const Unlikepost = (id) => {\r\n        setlike(false)\r\n        fetch('/unlike', {\r\n            method: \"put\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.map(items => {\r\n                    if (items._id == result._id) {\r\n                        return result\r\n                    } else {\r\n                        return items\r\n                    }\r\n                })\r\n                setData(newData)\r\n            })\r\n    }\r\n\r\n    const Comment = (id) => {\r\n        fetch('/comments', {\r\n            method: \"put\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                text: comment,\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.map(items => {\r\n                    if (items._id == result._id) {\r\n                        console.log(result)\r\n                        return result\r\n                    } else {\r\n                        return items\r\n                    }\r\n                })\r\n                setData(newData)\r\n                setinputvalue(\"\")\r\n            })\r\n    }\r\n    const Deletepost = (postId) => {\r\n        fetch(`/deletepost/${postId}`, {\r\n            method: 'delete',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.filter(items => {\r\n                    return items.comments._id !== result._id\r\n                })\r\n                setData(newData)\r\n            })\r\n\r\n    }\r\n\r\n    const Decomment = (id, commentid) => {\r\n        fetch('/decomments', {\r\n            method: \"put\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id,\r\n                commentId: commentid\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.map(items => {\r\n                    if (items._id == result._id) {\r\n                        console.log(result)\r\n                        return result\r\n                    } else {\r\n                        return items\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    const Changeview = (userid) => {\r\n        history.push(`/viewstory/${userid}`)\r\n    }\r\n\r\n    return (\r\n        <div className=\"home\">\r\n            <div className=\"storywrapper\">\r\n                {\r\n                    userstory\r\n                        ?\r\n                        userstory.map(items => {\r\n                            return (\r\n\r\n                                <div style={{ margin: \"5px\" }}>\r\n                                    <div className={\"storybackground\"}>\r\n                                        <img onClick={() => Changeview(items.postedBy._id)} className={\"story\"}\r\n                                            src={items.story}\r\n                                        />\r\n                                        <h5 style={{ position: 'absolute', bottom: '-40px', right: '5px', fontSize: '20px' }}>{items.postedBy.name}</h5>\r\n                                    </div>\r\n                                </div>\r\n                            )\r\n                        })\r\n                        :\r\n                        \"loading\"\r\n                }\r\n            </div>\r\n            <hr style={{ margin: '50px' }}></hr>\r\n            {\r\n                data.map(items => {\r\n                    return (\r\n                        <div className=\"card home-card\">\r\n                            <div style={{ display: \"flex\" }}>\r\n                                <img style={{ width: '50px', height: '50px', borderRadius: '50%' }} src={items.Userprofile} />\r\n                                <h5 style={{ height: \"50px\", margin: '10px' }}><Link to={items.postedBy._id !== state._id ? `/profile/${items.postedBy._id}` : \"/profile\"}>{items.postedBy.name}</Link>{items.postedBy._id === state._id\r\n                                    && <i style={{ float: 'right', cursor: 'pointer' }} className=\"material-icons\" onClick={() => { Deletepost(items._id) }}>delete</i>\r\n                                }\r\n\r\n                                </h5>\r\n                            </div>\r\n                            <div className='card-image'>\r\n                                <img\r\n                                    src={items.photo}\r\n                                />\r\n                            </div>\r\n                            <div className='card-content' >\r\n                                <i className=\"material-icons\" style={{ color: 'red' }}>favorite</i>\r\n                                {items.likes.includes(state._id) || like\r\n                                    ?\r\n                                    <i className=\"material-icons\" style={{ cursor: \"pointer\" }} onClick={() => { Unlikepost(items._id) }}>thumb_down</i>\r\n                                    :\r\n                                    <i className=\"material-icons\" style={{ cursor: \"pointer\" }} onClick={() => { Likepost(items._id) }}>thumb_up</i>\r\n                                }\r\n                                <h5>{items.likes.length} likes</h5>\r\n                                <h5>{items.title}</h5>\r\n                                <p>{items.body}</p>\r\n                                <div className=\"comments\">\r\n                                {\r\n                                    items.comments.map(record => {\r\n                                        if (record.text != \"\" && record.postedBy._id == state._id) {\r\n                                            return (\r\n                                                <h6><i style={{ float: 'left', cursor: 'pointer' }} className=\"material-icons\" onClick={() => { Decomment(items._id, record._id) }}>delete</i><span>{record.postedBy.name} </span>-- {record.text}</h6>\r\n                                            )\r\n                                        } else if (record.text != \"\") {\r\n                                            return (\r\n                                                <h6><span>{record.postedBy.name} </span>{record.text}</h6>\r\n                                            )\r\n                                        }\r\n\r\n                                    })\r\n                                }\r\n                            </div>\r\n                                <div style={{ display: 'flex' }}>\r\n\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        placeholder=\"add a comment\"\r\n                                        value={inputvalue}\r\n                                        onChange={(e) => { setComment(e.target.value) }}\r\n                                        onClick={() => { setinputvalue() }}\r\n                                    />\r\n                                    <i style={{ cursor: 'pointer' }} class=\"material-icons\" onClick={() => { Comment(items._id) }}>send</i>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    )\r\n                })\r\n\r\n            }\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Mysub","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\signin.js",[],"D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\CreatePost.js",["159","160"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport M from 'materialize-css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { UserContext } from '../../App'\r\n\r\nconst CreatePost = () => {\r\n\r\n  const history = useHistory()\r\n  const [data, setdata] = useState()\r\n  const [title, setTitle] = useState(\"\")\r\n  const [body, setBody] = useState(\"\")\r\n  const [image, setImage] = useState(\"\")\r\n  const [url, setUrl] = useState(\"\")\r\n  const { state } = useContext(UserContext)\r\n  const [userprofile, Setuserprofile] = useState(\"\")\r\n  const [privacy, Setprivacy] = useState(true)\r\n  const [getprivacy, Setgetprivacy] = useState(\"\")\r\n  const [loading, setLoading] = useState(false)\r\n  useEffect(() => {\r\n    if (url) {\r\n      fetch('/createpost', {\r\n        method: 'post',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n        },\r\n        body: JSON.stringify({\r\n          title,\r\n          body,\r\n          pic: url,\r\n          Userprofile: userprofile,\r\n          privacy: getprivacy\r\n        })\r\n      }).then(res => res.json())\r\n        .then(data => {\r\n          if (data.error) {\r\n            M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n          }\r\n          else {\r\n            M.toast({ html: 'saved successfully', classes: \"#388e3c green darken-2\" })\r\n            history.push('/home')\r\n            setdata(data)\r\n          }\r\n        })\r\n    }\r\n  }, [url])\r\n\r\n  const postDetails = () => {\r\n    setLoading(true)\r\n    Setuserprofile(state.photo)\r\n    const data = new FormData();\r\n    data.append('file', image)\r\n    data.append('upload_preset', 'insta-clone')\r\n    data.append('cloud_name', 'sahil-projects')\r\n    fetch('https://api.cloudinary.com/v1_1/sahil-projects/image/upload', {\r\n      method: 'post',\r\n      body: data\r\n    })\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        setUrl(result.url);\r\n\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n\r\n  }\r\n\r\n  const ChangePrivacyPrivate = () => {\r\n    Setprivacy(true)\r\n    Setgetprivacy(\"private\")\r\n    M.toast({ html: \"Your post is now private\", classes: \"#388e3c green darken-2\" })\r\n  }\r\n\r\n  const ChangePrivacyPublic = () => {\r\n    Setprivacy(false)\r\n    Setgetprivacy(\"public\")\r\n    M.toast({ html: \"Your post is now public\", classes: \"#388e3c green darken-2\" })\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\" style={{\r\n      margin: \"10px auto\",\r\n      maxWidth: \"550px\",\r\n      padding: \"20px\",\r\n      textAlign: \"center\"\r\n    }}>\r\n      {\r\n        loading\r\n          ?\r\n          \"loading...\"\r\n          :\r\n          <>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Title\"\r\n              value={title}\r\n              onChange={(e) => {\r\n                setTitle(e.target.value)\r\n              }}\r\n            ></input>\r\n            <input type=\"text\"\r\n              placeholder=\"body\"\r\n              value={body}\r\n              onChange={(e) => {\r\n                setBody(e.target.value)\r\n              }}\r\n            ></input>\r\n            <div style={{ display: \"flex\" }}>\r\n              <h5 style={{ marginRight: \"10px\" }}>Privacy:</h5>\r\n              {\r\n                privacy\r\n                  ?\r\n                  <button style={{ marginTop: \"10px\" }} className=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => ChangePrivacyPublic()}>Public </button>\r\n                  :\r\n                  <button style={{ marginTop: \"10px\" }} className=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => ChangePrivacyPrivate()}>private </button>\r\n              }\r\n            </div>\r\n            <div class=\"file-field input-field\">\r\n              <div class=\"btn #1e88e5 blue darken-1\">\r\n                <span>Upload Image</span>\r\n                <input type=\"file\"\r\n                  onChange={(e) => {\r\n                    setImage(e.target.files[0])\r\n                  }}\r\n                />\r\n              </div>\r\n              <div class=\"file-path-wrapper\">\r\n                <input class=\"file-path validate\" type=\"text\" />\r\n              </div>\r\n            </div>\r\n            <button class=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => postDetails()}>Submit Post</button>\r\n          </>\r\n      }\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default CreatePost\r\n\r\n\r\n","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\story.js",["161","162"],"import React, { useState, useEffect, useContext } from 'react'\r\nimport M from 'materialize-css'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\n\r\nconst Story = () => {\r\n\r\n  const history = useHistory()\r\n  const [image, setImage] = useState(\"\")\r\n  const [url, setUrl] = useState(\"\")\r\n  const [loading, setloading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n\r\n      fetch('/story', {\r\n        method: 'post',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n        },\r\n        body: JSON.stringify({\r\n          storypic: url,\r\n        })\r\n      }).then(res => res.json())\r\n        .then(data => {\r\n          if (data.error) {\r\n            M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n          }\r\n          else {\r\n            M.toast({ html: 'saved successfully', classes: \"#388e3c green darken-2\" })\r\n            history.push('/home')\r\n          }\r\n        })\r\n\r\n    }\r\n  }, [url])\r\n\r\n  const postDetails = () => {\r\n    setloading(false)\r\n    const data = new FormData();\r\n    data.append('file', image)\r\n    data.append('upload_preset', 'insta-clone')\r\n    data.append('cloud_name', 'sahil-projects')\r\n    fetch('https://api.cloudinary.com/v1_1/sahil-projects/image/upload', {  //taken from cloudiary\r\n      method: 'post',\r\n      body: data\r\n    })\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        setUrl(result.url);\r\n\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n\r\n  }\r\n  return (\r\n    <>\r\n      {\r\n        loading\r\n          ?\r\n          <div className=\"card\" style={{\r\n            margin: \"10px auto\",\r\n            maxWidth: \"550px\",\r\n            padding: \"20px\",\r\n            textAlign: \"center\"\r\n          }}>\r\n\r\n            <div class=\"file-field input-field\">\r\n              <div class=\"btn #1e88e5 blue darken-1\">\r\n                <span>Upload Story</span>\r\n                <input type=\"file\"\r\n                  onChange={(e) => {\r\n                    setImage(e.target.files[0])\r\n                  }}\r\n                />\r\n              </div>\r\n              <div class=\"file-path-wrapper\">\r\n                <input class=\"file-path validate\" type=\"text\" />\r\n              </div>\r\n            </div>\r\n            <button class=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => postDetails()}>Submit Story</button>\r\n          </div>\r\n          :\r\n          \"Uploading your story please wait\"\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default Story\r\n\r\n\r\n","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\Editpost.js",["163"],"import React, { useState, useContext } from 'react'\r\nimport { useParams, useHistory } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\n\r\nfunction Editpost() {\r\n  const history = useHistory()\r\n  const { id } = useParams()\r\n  const [title, setTitle] = useState(\"\")\r\n  const [body, setBody] = useState(\"\")\r\n  const [getprivacy, Setgetprivacy] = useState(\"private\")\r\n  const [privacy, Setprivacy] = useState(\"private\")\r\n  const EditDetails = () => {\r\n    fetch(`/Editpost/${id}`, {\r\n      method: 'put',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n      },\r\n      body: JSON.stringify({\r\n        title,\r\n        body,\r\n        privacy: getprivacy\r\n      })\r\n    })\r\n      .then(res => res.json())\r\n      .then(data => {\r\n        console.log(data)\r\n        history.push('/')\r\n      })\r\n  }\r\n  const ChangePrivacyPrivate = () => {\r\n    Setprivacy(true)\r\n    Setgetprivacy(\"private\")\r\n    M.toast({ html: \"Your post is now private\", classes: \"#388e3c green darken-2\" })\r\n  }\r\n\r\n  const ChangePrivacyPublic = () => {\r\n    Setprivacy(false)\r\n    Setgetprivacy(\"public\")\r\n    M.toast({ html: \"Your post is now public\", classes: \"#388e3c green darken-2\" })\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\" style={{\r\n      margin: \"10px auto\",\r\n      maxWidth: \"550px\",\r\n      padding: \"20px\",\r\n      textAlign: \"center\"\r\n    }}>\r\n      <input\r\n        type=\"text\"\r\n        placeholder=\"Title\"\r\n        value={title}\r\n        onChange={(e) => {\r\n          setTitle(e.target.value)\r\n        }}\r\n      ></input>\r\n      <input type=\"text\"\r\n        placeholder=\"body\"\r\n        value={body}\r\n        onChange={(e) => {\r\n          setBody(e.target.value)\r\n        }}\r\n      ></input>\r\n      <div style={{ margin: \"10px\", display: \"flex\" }}>\r\n        <h5 style={{ marginRight: \"10px\" }}>Privacy:</h5>\r\n        {\r\n          privacy\r\n            ?\r\n            <button class=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => ChangePrivacyPublic()}>Public </button>\r\n            :\r\n            <button class=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => ChangePrivacyPrivate()}>private </button>\r\n        }\r\n      </div>\r\n      <button style={{ marginLeft: \"10px\" }} class=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => EditDetails()}>Edit Post</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Editpost\r\n","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\Followreq.js",["164","165","166","167"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { UserContext } from '../../App'\r\n\r\nfunction Followreq() {\r\n    const [data, Setdata] = useState()\r\n    const { state, dispatch } = useContext(UserContext)\r\n    const history = useHistory()\r\n    useEffect(() => {\r\n        fetch('/followreq', {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                Setdata(result)\r\n            })\r\n    }, [data])\r\n    const Followuser = (userid) => {\r\n        fetch('/follow', {\r\n            method: 'put',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                followid: userid\r\n            })\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                fetch('/reject', {\r\n                    method: 'put',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                        'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n                    },\r\n                    body: JSON.stringify({\r\n                        followid: userid\r\n                    })\r\n                })\r\n                dispatch({ type: \"Updatefollower\", payload: { following: data.following, followers: data.followers } })\r\n                localStorage.setItem(\"user\", JSON.stringify(data))\r\n                history.push(`/profile/${userid}`)\r\n            })\r\n\r\n    }\r\n    const Unfollowrequser = (userid) => {\r\n        fetch('/reject', {\r\n            method: 'put',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                followid: userid\r\n            })\r\n        }).then(userdata => {\r\n            dispatch({ type: \"Updatefollower\", payload: { following: userdata.following, followers: userdata.followers } })\r\n            localStorage.setItem(\"user\", JSON.stringify(userdata))\r\n            //    history.push('/')\r\n            const newdata = data.map(items => {\r\n                if (items._id != userdata._id) {\r\n                    return items\r\n                }\r\n            })\r\n            Setdata(newdata)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                data\r\n                    ?\r\n                    data.map(items => {\r\n                        return (\r\n                            <div className=\"Followreq\">\r\n                                <div style={{ display: \"flex\", margin: \"20px\" }}>\r\n                                    <img style={{ width: '50px', height: '50px', borderRadius: '50%' }} src={items.photo} />\r\n                                    <h5 style={{ height: \"50px\", margin: '10px 20px' }}>{items.name}<br />requested to follow you</h5>\r\n                                </div>\r\n                                <div>\r\n                                    <button class=\"btn waves-effect waves-light #1e88e5 blue darken-1\" style={{ marginRight: \"10px\" }}\r\n                                        onClick={() => Followuser(items._id)}\r\n                                    >Accept</button>\r\n                                    <button class=\"btn waves-effect waves-light #1e88e5 blue darken-1\"\r\n                                        onClick={() => Unfollowrequser(items._id)}\r\n                                    >Reject</button>\r\n                                </div>\r\n                            </div>\r\n\r\n                        )\r\n                    })\r\n                    :\r\n                    \"loading\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Followreq\r\n","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\Profileupdate.js",["168","169"],"import React, { useState, useContext, useEffect } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { UserContext } from '../../App'\r\nimport M from 'materialize-css'\r\n\r\nfunction Profileupdate() {\r\n\r\n  const history = useHistory()\r\n  const [image, setImage] = useState(\"\")\r\n  const [url, setUrl] = useState(\"\")\r\n  const { state, dispatch } = useContext(UserContext)\r\n\r\n  useEffect(() => {\r\n    if (url) {\r\n      fetch('/UpdateProfile', {\r\n        method: 'put',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n        },\r\n        body: JSON.stringify({\r\n          pic: url,\r\n        })\r\n      }).then(res => res.json())\r\n        .then(data => {\r\n          if (data.error) {\r\n            M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n          }\r\n          else {\r\n            console.log(data)\r\n            M.toast({ html: 'saved successfully', classes: \"#388e3c green darken-2\" })\r\n            localStorage.setItem(\"user\", JSON.stringify(data))\r\n            history.push('/profile')\r\n          }\r\n          console.log(data)\r\n\r\n        })\r\n\r\n    }\r\n  }, [url])\r\n\r\n  const postDetails = () => {\r\n\r\n    const data = new FormData();\r\n    data.append('file', image)\r\n    data.append('upload_preset', 'insta-clone')\r\n    data.append('cloud_name', 'sahil-projects')\r\n    fetch('https://api.cloudinary.com/v1_1/sahil-projects/image/upload', {  //taken from cloudiary\r\n      method: 'post',\r\n      body: data\r\n    })\r\n      .then(response => response.json())\r\n      .then(result => {\r\n        setUrl(result.url);\r\n        dispatch({ type: \"UpdateProfile\", payload: result.url })\r\n      })\r\n      .catch(error => {\r\n        console.error('Error:', error);\r\n      });\r\n\r\n  }\r\n\r\n  return (\r\n    <div className=\"card\" style={{\r\n      margin: \"10px auto\",\r\n      maxWidth: \"550px\",\r\n      padding: \"20px\",\r\n      textAlign: \"center\"\r\n    }}>\r\n\r\n      <div class=\"file-field input-field\">\r\n        <div class=\"btn #1e88e5 blue darken-1\">\r\n          <span>Update profile</span>\r\n          <input type=\"file\"\r\n            onChange={(e) => {\r\n              setImage(e.target.files[0])\r\n            }}\r\n          />\r\n        </div>\r\n        <div class=\"file-path-wrapper\">\r\n          <input class=\"file-path validate\" type=\"text\" />\r\n        </div>\r\n      </div>\r\n      <button class=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => postDetails()}>Update Profile</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Profileupdate\r\n","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\Newpassword.js",["170","171"],"import React, { useState, useContext } from 'react'\r\nimport { Link, useHistory,useParams } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport { UserContext } from '../../App'\r\nconst NewPassword = () => {\r\n    const { dispatch } = useContext(UserContext)\r\n    const {token} = useParams()\r\n    const history = useHistory()\r\n    const [password, setPassword] = useState(\"\")\r\n    const Postdata2 = () => {\r\n        fetch('/new-password', {\r\n            method: \"post\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                token,\r\n                password,\r\n\r\n            })\r\n\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n\r\n                }\r\n                else {\r\n                    M.toast({ html: data.message, classes: \"#388e3c green darken-2\" })\r\n                    history.push('/signin')\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n                <h2 className=\"signin-header\">Instagram</h2>\r\n                <input\r\n                    type=\"password\"\r\n                    placeholder=\"password\"\r\n                    value={password}\r\n                    onChange={(e) => {\r\n                        setPassword(e.target.value)\r\n                    }}\r\n                />\r\n                <button class=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => Postdata2()}>New Password </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPassword","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\Viewstory.js",["172"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { useHistory, useParams } from 'react-router-dom'\r\nimport { FaArrowAltCircleLeft, FaArrowAltCircleRight } from 'react-icons/fa'\r\nimport { UserContext } from '../../App'\r\n\r\nfunction Viewstory() {\r\n    const history = useHistory()\r\n    const { userid } = useParams()\r\n    const [story, setstory] = useState(\"\")\r\n    const [storylength, setstorylength] = useState()\r\n    const [current, setcurrent] = useState(0)\r\n    const { state } = useContext(UserContext)\r\n    const [sure, Setsure] = useState(false)\r\n    const [deleteStory, setdeletestory] = useState(\"\")\r\n    useEffect(() => {\r\n        fetch(`/getviewstory/${userid}`, {\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(restory => {\r\n                setstory(restory)\r\n                setstorylength(restory.length)\r\n                setdeletestory(\"\")\r\n            })\r\n\r\n    }, [deleteStory])\r\n    const NextSlide = () => {\r\n        setcurrent(current === storylength - 1 ? 0 : current + 1)\r\n    }\r\n    const PreviousSlide = () => {\r\n        setcurrent(current === 0 ? storylength - 1 : current - 1)\r\n    }\r\n\r\n    const Suredelete = () => {\r\n\r\n        sure ? Setsure(false) : Setsure(true)\r\n\r\n    }\r\n    const Dontdelete = () => {\r\n\r\n        sure ? Setsure(false) : Setsure(true)\r\n\r\n    }\r\n    const Deletepost = (postId) => {\r\n        console.log(postId)\r\n        fetch('/deleteStory', {\r\n            method: 'put',\r\n            headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            },\r\n            body: JSON.stringify({\r\n                storyid: postId\r\n            })\r\n        }).then(res => res.json())\r\n            .then(deletedstory => {\r\n                setdeletestory(\"deleted\")\r\n            })\r\n    }\r\n    const Closestory = ()=>{\r\n        history.push('/mysubpost')\r\n    }\r\n    return (\r\n        <section className=\"slider\">\r\n            <FaArrowAltCircleLeft className=\"left-arrow\" onClick={() => PreviousSlide()} />\r\n            <FaArrowAltCircleRight className=\"right-arrow\" onClick={() => NextSlide()} />\r\n            {\r\n                story\r\n                    ?\r\n                    story.map((items, index) => {\r\n                        return (\r\n                            <div className={current === index ? \"slide active\" : \"slide\"} keys={index}>\r\n\r\n                                {items.postedBy._id === state._id && index === current\r\n                                    ?\r\n                                    <div>\r\n                                        <i style={{ position: 'absolute', right: '0', top: '10px', cursor: 'pointer', display: 'flex', margin: '10px' }} className=\"material-icons\"\r\n                                            onClick={() => { Suredelete() }} >delete\r\n                          {\r\n                                                sure\r\n                                                    ?\r\n                                                    <button class=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => Deletepost(items._id)}>Confirm</button>\r\n                                                    :\r\n                                                    \"\"\r\n                                            }\r\n                                            {\r\n                                                sure\r\n                                                    ?\r\n                                                    <button style={{ marginLeft: '5px' }} class=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => Dontdelete()}>Cancel</button>\r\n                                                    :\r\n                                                    \"\"\r\n                                            }\r\n\r\n                                        </i>\r\n\r\n                                        {index === current ? <img className=\"image\" src={items.story} alt=\"story\" /> : \"\"}\r\n                                    </div>\r\n                                    :\r\n                                    <div>\r\n                                        {\r\n                                            items.postedBy._id !== state._id\r\n                                            ?\r\n                                        <>\r\n                                         <i style={{ position: 'absolute', right: '0', top: '10px', cursor: 'pointer', display: 'flex', margin: '10px' }} className=\"material-icons\"\r\n                                            onClick={() => {Closestory()}} >close</i> \r\n\r\n                                        {index === current ? <img className=\"image\" src={items.story} alt=\"story\" /> : \"\"}\r\n                                        </>\r\n                                        :\r\n                                        <>\r\n                                        {index === current ? <img className=\"image\" src={items.story} alt=\"story\" /> : \"\"}\r\n                                        </>\r\n                                      }\r\n                                    </div>\r\n                                }\r\n\r\n                            </div>\r\n                        )\r\n                    })\r\n                    :\r\n                    \"loading\"\r\n            }\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Viewstory\r\n","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\Resetpassword.js",["173"],"import React, { useState, useContext } from 'react'\r\n\r\nimport M from 'materialize-css'\r\nimport { useHistory } from 'react-router-dom'\r\n\r\nconst Resetpassword = () => {\r\n    const [email, setEmail] = useState(\"\")\r\n    const history = useHistory()\r\n    const Postdata2 = () => {\r\n        fetch('/reset-password', {\r\n            method: \"post\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                email,\r\n            })\r\n\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n\r\n                }\r\n                else {\r\n                    M.toast({ html: data.message, classes: \"#388e3c green darken-2\" })\r\n                    history.push('/signin')\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"mycard\">\r\n            <div className=\"card auth-card input-field\">\r\n                <h2 className=\"signin-header\">Instagram</h2>\r\n                <input\r\n                    type=\"email\"\r\n                    placeholder=\"email\"\r\n                    value={email}\r\n                    onChange={(e) => {\r\n                        setEmail(e.target.value)\r\n                    }}\r\n                />\r\n                <button class=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => Postdata2()}>Email request </button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Resetpassword","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\Emailvalidate.js",["174","175","176","177"],"import React, { useState, useContext } from 'react'\r\nimport { Link, useHistory,useParams } from 'react-router-dom'\r\nimport M from 'materialize-css'\r\nimport { UserContext } from '../../App'\r\nconst Emailvalidate = () => {\r\n    const history = useHistory()\r\n    const {emailtoken} = useParams()\r\n    const Postdata2 = () => {\r\n        fetch('/validation', {\r\n            method: \"post\",\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                emailtoken\r\n            })\r\n\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                if (data.error) {\r\n                    M.toast({ html: data.error, classes: \"#c62828 red darken-3\" })\r\n\r\n                }\r\n                else {\r\n                    M.toast({ html: data.message, classes: \"#388e3c green darken-2\" })\r\n                    history.push('/signin')\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    return (\r\n        <div className=\"mycard\">\r\n            <h5>Your email has been verified successfully!! Click sign up button to continue</h5>\r\n            \r\n            <button class=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => Postdata2()}>Sign Up</button>\r\n           \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Emailvalidate","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\Userposts.js",["178","179","180","181","182","183","184","185","186","187","188","189"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { UserContext } from '../../App'\r\nimport { Link, useParams } from 'react-router-dom'\r\n\r\nfunction Userposts() {\r\n    const { state } = useContext(UserContext)\r\n    const [data, setData] = useState([])\r\n    const [comment, setComment] = useState(\"\")\r\n    const [like, setlike] = useState(false)\r\n    const [sure, Setsure] = useState(false)\r\n    const { userid } = useParams()\r\n    const [inputvalue, setinputvalue] = useState()\r\n\r\n    useEffect(() => {\r\n        fetch(`/getuserpost/${userid}`, {\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                setData(result)\r\n            })\r\n    }, [])\r\n\r\n    const Likepost = (id) => {\r\n        setlike(true)\r\n        fetch('/like', {\r\n            method: \"put\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.map(items => {\r\n                    if (items._id == result._id) {\r\n                        return result\r\n                    } else {\r\n                        return items\r\n                    }\r\n                })\r\n                setData(newData)\r\n                setlike(false)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    const Unlikepost = (id) => {\r\n        setlike(false)\r\n        fetch('/unlike', {\r\n            method: \"put\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.map(items => {\r\n                    if (items._id == result._id) {\r\n                        //console.log(result)\r\n                        return result\r\n                    } else {\r\n                        return items\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    const Comment = (id) => {\r\n        fetch('/comments', {\r\n            method: \"put\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                text: comment,\r\n                postId: id\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.map(items => {\r\n                    if (items._id == result._id) {\r\n                        return result\r\n                    } else {\r\n                        return items\r\n                    }\r\n                })\r\n                setData(newData)\r\n                setinputvalue(\"\")\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    const Deletepost = (postId) => {\r\n        fetch(`/deletepost/${postId}`, {\r\n            method: 'delete',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.filter(items => {\r\n                    return items.comments._id !== result._id\r\n                })\r\n                setData(newData)\r\n            })\r\n\r\n            .catch(err => {\r\n                console.log(err)\r\n            })\r\n\r\n    }\r\n\r\n    const Decomment = (id, commentid) => {\r\n        fetch('/decomments', {\r\n            method: \"put\",\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            },\r\n            body: JSON.stringify({\r\n                postId: id,\r\n                commentId: commentid\r\n            })\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                const newData = data.map(items => {\r\n                    if (items._id == result._id) {\r\n                        console.log(result)\r\n                        return result\r\n                    } else {\r\n                        return items\r\n                    }\r\n                })\r\n                setData(newData)\r\n            }).catch(err => {\r\n                console.log(err)\r\n            })\r\n    }\r\n    const Suredelete = () => {\r\n\r\n        sure ? Setsure(false) : Setsure(true)\r\n\r\n    }\r\n    const Dontdelete = () => {\r\n\r\n        sure ? Setsure(false) : Setsure(true)\r\n\r\n    }\r\n    return (\r\n        <div>\r\n            {\r\n                data\r\n                    ?\r\n                    data.map(items => {\r\n\r\n                        return (\r\n                            <div className=\"card home-card\">\r\n                                <div style={{ display: 'flex' }}>\r\n\r\n                                    <img style={{ width: '50px', height: '50px', borderRadius: '50%' }} src={items.Userprofile} />\r\n                                    <h5 style={{ height: \"50px\", margin: '10px' }}><Link to={items.postedBy._id !== state._id ? `/profile/${items.postedBy._id}` : \"/profile\"}>{items.postedBy.name}</Link>\r\n                                        {\r\n                                            items.postedBy._id == state._id\r\n                                                ?\r\n                                                <Link to={`/edit/${items._id}`}><i className=\"material-icons\" style={{ marginLeft: \"7px\", float: \"right\", cursor: \"pointer\" }}>create</i></Link>\r\n                                                :\r\n                                                \"\"\r\n                                        }\r\n\r\n                                        {items.postedBy._id === state._id\r\n                                            && <i style={{ position: 'absolute', right: '0', top: '10px', cursor: 'pointer', display: 'flex', margin: '10px' }} className=\"material-icons\"\r\n                                                onClick={() => { Suredelete() }} >delete\r\n                          {\r\n                                                    sure\r\n                                                        ?\r\n                                                        <button class=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => Deletepost(items._id)}>Confirm</button>\r\n                                                        :\r\n                                                        \"\"\r\n                                                }\r\n                                                {\r\n                                                    sure\r\n                                                        ?\r\n                                                        <button style={{ marginLeft: '5px' }} class=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => Dontdelete()}>Cancel</button>\r\n                                                        :\r\n                                                        \"\"\r\n                                                }\r\n\r\n                                            </i>\r\n\r\n                                        }\r\n\r\n                                    </h5>\r\n                                </div>\r\n                                <div className='card-image'>\r\n                                    <img\r\n                                        src={items.photo}\r\n                                    />\r\n                                </div>\r\n                                <div className='card-content' >\r\n                                    <i className=\"material-icons\" style={{ color: 'red' }}>favorite</i>\r\n                                    {items.likes.includes(state._id) || like\r\n                                        ?\r\n                                        <i className=\"material-icons\" style={{ cursor: \"pointer\" }} onClick={() => { Unlikepost(items._id) }}>thumb_down</i>\r\n                                        :\r\n                                        <i className=\"material-icons\" style={{ cursor: \"pointer\" }} onClick={() => { Likepost(items._id) }}>thumb_up</i>\r\n                                    }\r\n                                    <h5>{items.likes.length} likes</h5>\r\n                                    <h5>{items.title}</h5>\r\n                                    <p>{items.body}</p>\r\n                                    <div className=\"comments\">\r\n                                        {\r\n                                            items.comments.map(record => {\r\n                                                if (record.text != \"\" && record.postedBy._id == state._id) {\r\n                                                    return (\r\n                                                        <h6><i style={{ float: 'left', cursor: 'pointer' }} className=\"material-icons\" onClick={() => { Decomment(items._id, record._id) }}>delete</i><span>{record.postedBy.name} </span>-- {record.text}</h6>\r\n                                                    )\r\n                                                } else if (record.text != \"\") {\r\n                                                    return (\r\n                                                        <h6><span>{record.postedBy.name} </span>--{record.text}</h6>\r\n                                                    )\r\n                                                }\r\n\r\n                                            })\r\n                                        }\r\n                                    </div>\r\n                                    <div style={{ display: 'flex' }}>\r\n\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            placeholder=\"add a comment\"\r\n                                            value={inputvalue}\r\n                                            onClick={() => { setinputvalue() }}\r\n                                            onChange={(e) => { setComment(e.target.value) }}\r\n                                        />\r\n                                        <i style={{ cursor: 'pointer' }} class=\"material-icons\" onClick={() => { Comment(items._id) }}>send</i>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        )\r\n                    })\r\n                    :\r\n                    \"loading\"\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Userposts\r\n","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\reducers\\userReducer.js",["190","191","192"],"\r\n\r\nexport const initialState = null\r\n\r\nexport const reducer = (state,action)=>{\r\n    if(action.type === 'USER'){\r\n        return action.payload\r\n    }\r\n    if(action.type === 'clear'){\r\n        return null\r\n    }\r\n    if(action.type == 'Updatefollower'){\r\n        return {\r\n            ...state,\r\n            followers:action.payload.followers,\r\n            following:action.payload.following\r\n        }\r\n    }\r\n    if(action.type == \"Update\"){\r\n        return{\r\n            ...state,\r\n            request:action.payload.request\r\n        }\r\n    }\r\n   if(action.type == \"UpdateProfile\"){\r\n       return{\r\n           ...state,\r\n           photo:action.payload\r\n       }\r\n   }\r\n    return state\r\n}","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\profile.js",["193","194","195"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { UserContext } from '../../App'\r\nimport M from 'materialize-css'\r\n\r\nconst Profile = () => {\r\n    const history = useHistory()\r\n    const [mypost, setMypost] = useState([])\r\n    const { state, dispatch } = useContext(UserContext)\r\n    const user = JSON.parse(localStorage.getItem(\"user\"))\r\n    const [privacy, Setprivacy] = useState(user.privacy == \"private\" ? true : false)\r\n    useEffect(() => {\r\n\r\n        fetch('/mypost', {\r\n            headers: {\r\n                'Authorization': 'Bearer ' + localStorage.getItem('jwt')\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                setMypost(result.mypost)\r\n            })\r\n    }, [])\r\n    const UpdateProfile = () => {\r\n        history.push('/UpdateProfile')\r\n    }\r\n    const DeleteProfile = () => {\r\n        fetch('/deleteProfile', {\r\n            method: 'get',\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(data => {\r\n                localStorage.setItem(\"user\", JSON.stringify(data))\r\n                dispatch({ type: \"UpdateProfile\", payload: data.photo })\r\n\r\n            })\r\n\r\n    }\r\n\r\n    const Pushtouserpost = (userid) => {\r\n        history.push(`/userposts/${userid}`)\r\n    }\r\n    const ChangePrivacyPublic = () => {\r\n        fetch('/changeprivacypublic', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                if (result.message) {\r\n                    M.toast({ html: result.message, classes: \"#388e3c green darken-2\" })\r\n                    Setprivacy(false)\r\n                }\r\n                else {\r\n                    M.toast({ html: \"Something went wrong Try again Later\", classes: \"#388e3c green darken-2\" })\r\n                }\r\n            })\r\n    }\r\n    const ChangePrivacyPrivate = () => {\r\n        fetch('/changeprivacyprivate', {\r\n            method: \"put\",\r\n            headers: {\r\n                \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n            }\r\n        }).then(res => res.json())\r\n            .then(result => {\r\n                if (result.message) {\r\n                    M.toast({ html: result.message, classes: \"#388e3c green darken-2\" })\r\n                    Setprivacy(true)\r\n                }\r\n                else {\r\n                    M.toast({ html: \"Something went wrong Try again Later\", classes: \"#388e3c green darken-2\" })\r\n                }\r\n            })\r\n    }\r\n    return (\r\n        <div style={{\r\n            maxWidth: '550px',\r\n            margin: '0px auto'\r\n        }}>\r\n            <div style={{\r\n                display: 'flex',\r\n\r\n                margin: \"20px auto\",\r\n                borderBottom: '2px solid grey',\r\n            }}>\r\n                <div style={{ position: \"relative\" }}>\r\n                    <img style={{ width: \"140px\", height: \"140px\", borderRadius: \"50%\", border: \"5px solid green\" }}\r\n                        src={state ? state.photo : \"https://res.cloudinary.com/sahil-projects/image/upload/v1610541797/nouser_boaixh.jpg\"}\r\n                        alt=\"\" />\r\n                    {\r\n                        state && state.photo == \"https://res.cloudinary.com/sahil-projects/image/upload/v1610541797/nouser_boaixh.jpg\"\r\n                            ?\r\n                            <i className=\"material-icons\" style={{ position: 'absolute', color: 'green', bottom: '40px', right: '20px', cursor: \"pointer\" }}\r\n                                onClick={() => { UpdateProfile() }}\r\n                            >camera_alt</i>\r\n                            :\r\n                            <i className=\"material-icons\" style={{ position: 'absolute', color: 'black', bottom: '40px', right: '20px', cursor: \"pointer\" }}\r\n\r\n                                onClick={() => { DeleteProfile() }}\r\n                            >delete</i>\r\n                    }\r\n                </div>\r\n                <div className=\"Profile\">\r\n                    <div className=\"Profileinside\"  >\r\n                        <h4>{state ? state.name : \"loading\"}</h4>\r\n                        {\r\n                            privacy\r\n                                ?\r\n                                <button style={{ position: \"relative\", top: \"20px\", left: \"10px\" }} class=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => ChangePrivacyPublic()}>Public </button>\r\n                                :\r\n                                <button style={{ position: \"relative\", top: \"20px\", left: \"10px\" }} class=\"btn waves-effect waves-light #1e88e5 blue darken-1\" onClick={() => ChangePrivacyPrivate()}>private </button>\r\n                        }\r\n                    </div>\r\n                    <h5>{state ? state.email : \"loading\"}</h5>\r\n                    <div style={{\r\n                        display: 'flex',\r\n                        justifyContent: 'space-around',\r\n                        width: '110%'\r\n                    }}>\r\n                        <h6>{mypost.length} posts</h6>\r\n                        <h6>{state && state.followers ? state.followers.length : \"0\"} followers</h6>\r\n                        <h6>{state && state.following ? state.following.length : \"0\"} following</h6>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"Gallery\">\r\n                {\r\n                    mypost.map(items => {\r\n                        return (\r\n                            <img onClick={() => Pushtouserpost(items.postedBy._id)} style={{ width: '150px', height: '200px' }} className=\"items\" keys={items._id} src={items.photo} />\r\n                        )\r\n                    })\r\n\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\Messages.js",["196","197"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { UserContext } from '../../App'\r\n\r\nfunction Messages() {\r\n    const history = useHistory()\r\n    const {state} = useContext(UserContext)\r\n    const [user,SetUser] = useState([])\r\n    const [messageid,Setmessageid] = useState(\"\")\r\n\r\n    useEffect(()=>{\r\n        fetch('/getuserMessage',{\r\n            headers:{\r\n                'Authorization':'Bearer '+ localStorage.getItem('jwt'),\r\n                'Content-Type':'application/json'\r\n            }\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            SetUser(result.user)\r\n        })\r\n    },[])\r\n\r\n    const ViewMessage = (id)=>{\r\n        fetch('/CreateuserMessage',{\r\n            method:'post',\r\n            headers:{\r\n                'Authorization':'Bearer '+ localStorage.getItem('jwt'),\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                friend_id:id\r\n            })\r\n            }).then(res=>res.json())\r\n            .then(result=>{\r\n                Setmessageid(result.id_2)\r\n            })\r\n            history.push(`/viewmessage/${id}`)\r\n    }\r\n    \r\n    return (\r\n        <>\r\n        {\r\n            state\r\n             ? \r\n             user.map(items=>{\r\n                 return(\r\n                    <div style={{display:\"flex\",margin:\"20px\",height:\"max-content\"}} onClick={()=>ViewMessage(items._id)}>\r\n                    <div className=\"messageProfile\" >\r\n                        <img src={items.photo} />\r\n                    </div>\r\n                    <div style={{position:\"relative\",width:\"200px\"}}>\r\n                        <h6 style={{position:\"absolute\",top:\"-10px\"}}>{items.name}</h6>\r\n                        <p style={{fontSize:\"15px\",fontWeight:\"400\",position:\"absolute\",top:\"10px\"}}>Tap to message</p>\r\n                    </div>\r\n                </div>\r\n                 )\r\n             })\r\n             :\r\n             \"loading\"\r\n            }\r\n     </>\r\n    )\r\n}\r\n\r\nexport default Messages\r\n","D:\\Desktop\\web dev projects\\Instagram\\client\\src\\components\\screens\\ViewMessage.js",["198","199","200"],"import React, { useContext, useEffect, useRef, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { UserContext } from '../../App'\r\n\r\nfunction ViewMessage() {\r\n    const {state} = useContext(UserContext)\r\n    const {id} = useParams()\r\n    const [message,setMessage] = useState(\"\")\r\n    const [messageid_1,Setmessageid_1] = useState(\"\")\r\n    const [messageid_2,Setmessageid_2] = useState(\"\")\r\n    const [receivedMessage,setReceivedmessage] = useState()\r\n    const [sentMessages,Setsentmessages] = useState()\r\n    const scrollMessage = useRef(null)\r\n    useEffect(()=>{\r\n        fetch('/getuserid',{\r\n            method:'post',\r\n            headers:{\r\n                'Authorization':'Bearer '+ localStorage.getItem('jwt'),\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                friend_id:id\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            Setmessageid_1(result.id_1)\r\n            Setmessageid_2(result.id_2)\r\n            setReceivedmessage(result.user1)\r\n        })\r\n    },[])\r\n    useEffect(()=>{\r\n        Scrolltobottom()\r\n    },[receivedMessage])\r\n    const SendMessage = ()=>{\r\n        if(message !== \"\"){\r\n        fetch('/storeMessage',{\r\n            method:'post',\r\n            headers:{\r\n                'Authorization':'Bearer ' + localStorage.getItem('jwt'),\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                messageid_1,\r\n                messageid_2,\r\n                friend_id:id,\r\n                message\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            setMessage(\"\")\r\n            setReceivedmessage(result)\r\n        })\r\n    }\r\n    }\r\n    const Scrolltobottom = ()=>{\r\n        if(scrollMessage.current){\r\n            scrollMessage.current.scrollIntoView({behavior:\"smooth\"})\r\n        }\r\n    }\r\n    const Deletemsg = (deleteMessage)=>{\r\n        fetch('/deletemsg',{\r\n            method:'post',\r\n            headers:{\r\n                'Authorization':'Bearer ' + localStorage.getItem('jwt'),\r\n                'Content-Type':'application/json'\r\n            },\r\n            body:JSON.stringify({\r\n                messageid_1,\r\n                messageid_2,\r\n                deleteMessage\r\n            })\r\n        }).then(res=>res.json())\r\n        .then(result=>{\r\n            console.log(result)\r\n           setReceivedmessage(result)\r\n        })\r\n    }\r\n   \r\n    return (\r\n        <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\", justifyContent: \"center\" }}>\r\n            <div className=\"ViewMessage\">\r\n                <div className=\"MessageContainer\">\r\n                    {\r\n                        receivedMessage && state\r\n                        ?\r\n                        receivedMessage.messages.map(items=>{\r\n                            return(\r\n                            <div ref={scrollMessage} className={items.postedBy._id && items.postedBy._id === state._id ? 'sentMessage' : 'receivedmessage'}>\r\n                            <h5 style={{ fontSize: '15px', fontWeight: 'bold',paddingLeft:'5px' }}>{items.message}</h5>\r\n                            {\r\n                                items.postedBy._id && items.postedBy._id === state._id \r\n                                ?\r\n                                <i style={{marginLeft:'auto',cursor:\"pointer\"}} className=\"material-icons\" onClick={()=>Deletemsg(items.message)}>delete</i>\r\n                                :\r\n                                \"\"\r\n                            }\r\n                        </div>\r\n                            )\r\n                        })\r\n                   :\r\n                   \"loading....\"\r\n                    }\r\n                </div>\r\n                <div className=\"form\">\r\n                    <hr />\r\n                    <input placeholder=\"Type a message\" value={message}  onChange={(e) => {setMessage(e.target.value)} } ></input>\r\n                    <i style={{ cursor: 'pointer', marginLeft: \"10px\" }} className=\"material-icons\" onClick={()=>SendMessage()}>send</i>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ViewMessage\r\n",["201","202"],{"ruleId":"203","replacedBy":"204"},{"ruleId":"205","replacedBy":"206"},{"ruleId":"207","severity":1,"message":"208","line":32,"column":11,"nodeType":"209","messageId":"210","endLine":32,"endColumn":16},{"ruleId":"211","severity":1,"message":"212","line":54,"column":6,"nodeType":"213","endLine":54,"endColumn":8,"suggestions":"214"},{"ruleId":"207","severity":1,"message":"215","line":1,"column":17,"nodeType":"209","messageId":"210","endLine":1,"endColumn":26},{"ruleId":"207","severity":1,"message":"216","line":9,"column":11,"nodeType":"209","messageId":"210","endLine":9,"endColumn":18},{"ruleId":"207","severity":1,"message":"217","line":13,"column":12,"nodeType":"209","messageId":"210","endLine":13,"endColumn":17},{"ruleId":"207","severity":1,"message":"218","line":13,"column":19,"nodeType":"209","messageId":"210","endLine":13,"endColumn":27},{"ruleId":"207","severity":1,"message":"219","line":14,"column":12,"nodeType":"209","messageId":"210","endLine":14,"endColumn":15},{"ruleId":"207","severity":1,"message":"220","line":14,"column":17,"nodeType":"209","messageId":"210","endLine":14,"endColumn":23},{"ruleId":"211","severity":1,"message":"221","line":45,"column":8,"nodeType":"213","endLine":45,"endColumn":10,"suggestions":"222"},{"ruleId":"223","severity":1,"message":"224","line":61,"column":35,"nodeType":"225","messageId":"226","endLine":61,"endColumn":37},{"ruleId":"223","severity":1,"message":"224","line":87,"column":35,"nodeType":"225","messageId":"226","endLine":87,"endColumn":37},{"ruleId":"223","severity":1,"message":"224","line":115,"column":35,"nodeType":"225","messageId":"226","endLine":115,"endColumn":37},{"ruleId":"223","severity":1,"message":"224","line":165,"column":35,"nodeType":"225","messageId":"226","endLine":165,"endColumn":37},{"ruleId":"227","severity":1,"message":"228","line":201,"column":25,"nodeType":"229","endLine":202,"endColumn":47},{"ruleId":"227","severity":1,"message":"228","line":204,"column":25,"nodeType":"229","endLine":206,"endColumn":27},{"ruleId":"223","severity":1,"message":"224","line":220,"column":47,"nodeType":"225","messageId":"226","endLine":220,"endColumn":49},{"ruleId":"227","severity":1,"message":"228","line":225,"column":45,"nodeType":"229","endLine":225,"endColumn":139},{"ruleId":"223","severity":1,"message":"224","line":228,"column":72,"nodeType":"225","messageId":"226","endLine":228,"endColumn":74},{"ruleId":"227","severity":1,"message":"228","line":260,"column":45,"nodeType":"229","endLine":262,"endColumn":47},{"ruleId":"230","severity":1,"message":"231","line":277,"column":79,"nodeType":"232","messageId":"233","endLine":277,"endColumn":81},{"ruleId":"223","severity":1,"message":"234","line":278,"column":73,"nodeType":"225","messageId":"226","endLine":278,"endColumn":75},{"ruleId":"223","severity":1,"message":"224","line":278,"column":102,"nodeType":"225","messageId":"226","endLine":278,"endColumn":104},{"ruleId":"223","severity":1,"message":"234","line":282,"column":80,"nodeType":"225","messageId":"226","endLine":282,"endColumn":82},{"ruleId":"235","severity":1,"message":"236","line":112,"column":11,"nodeType":"229","endLine":112,"endColumn":104},{"ruleId":"211","severity":1,"message":"237","line":25,"column":8,"nodeType":"213","endLine":25,"endColumn":17,"suggestions":"238"},{"ruleId":"223","severity":1,"message":"224","line":96,"column":58,"nodeType":"225","messageId":"226","endLine":96,"endColumn":60},{"ruleId":"223","severity":1,"message":"224","line":144,"column":58,"nodeType":"225","messageId":"226","endLine":144,"endColumn":60},{"ruleId":"239","severity":1,"message":"240","line":144,"column":70,"nodeType":"241","messageId":"242","endLine":144,"endColumn":72},{"ruleId":"239","severity":1,"message":"240","line":144,"column":79,"nodeType":"241","messageId":"242","endLine":144,"endColumn":81},{"ruleId":"227","severity":1,"message":"228","line":150,"column":45,"nodeType":"229","endLine":150,"endColumn":182},{"ruleId":"223","severity":1,"message":"224","line":54,"column":35,"nodeType":"225","messageId":"226","endLine":54,"endColumn":37},{"ruleId":"223","severity":1,"message":"224","line":78,"column":35,"nodeType":"225","messageId":"226","endLine":78,"endColumn":37},{"ruleId":"223","severity":1,"message":"224","line":102,"column":35,"nodeType":"225","messageId":"226","endLine":102,"endColumn":37},{"ruleId":"223","severity":1,"message":"224","line":144,"column":35,"nodeType":"225","messageId":"226","endLine":144,"endColumn":37},{"ruleId":"227","severity":1,"message":"228","line":171,"column":41,"nodeType":"229","endLine":173,"endColumn":43},{"ruleId":"227","severity":1,"message":"228","line":189,"column":33,"nodeType":"229","endLine":189,"endColumn":127},{"ruleId":"227","severity":1,"message":"228","line":197,"column":33,"nodeType":"229","endLine":199,"endColumn":35},{"ruleId":"230","severity":1,"message":"231","line":214,"column":63,"nodeType":"232","messageId":"233","endLine":214,"endColumn":65},{"ruleId":"223","severity":1,"message":"234","line":215,"column":57,"nodeType":"225","messageId":"226","endLine":215,"endColumn":59},{"ruleId":"223","severity":1,"message":"224","line":215,"column":86,"nodeType":"225","messageId":"226","endLine":215,"endColumn":88},{"ruleId":"223","severity":1,"message":"234","line":219,"column":64,"nodeType":"225","messageId":"226","endLine":219,"endColumn":66},{"ruleId":"207","severity":1,"message":"243","line":9,"column":10,"nodeType":"209","messageId":"210","endLine":9,"endColumn":14},{"ruleId":"211","severity":1,"message":"244","line":46,"column":6,"nodeType":"213","endLine":46,"endColumn":11,"suggestions":"245"},{"ruleId":"207","severity":1,"message":"246","line":1,"column":38,"nodeType":"209","messageId":"210","endLine":1,"endColumn":48},{"ruleId":"211","severity":1,"message":"247","line":37,"column":6,"nodeType":"213","endLine":37,"endColumn":11,"suggestions":"248"},{"ruleId":"207","severity":1,"message":"246","line":1,"column":27,"nodeType":"209","messageId":"210","endLine":1,"endColumn":37},{"ruleId":"207","severity":1,"message":"208","line":7,"column":13,"nodeType":"209","messageId":"210","endLine":7,"endColumn":18},{"ruleId":"230","severity":1,"message":"231","line":62,"column":44,"nodeType":"232","messageId":"233","endLine":62,"endColumn":46},{"ruleId":"223","severity":1,"message":"234","line":63,"column":31,"nodeType":"225","messageId":"226","endLine":63,"endColumn":33},{"ruleId":"227","severity":1,"message":"228","line":80,"column":37,"nodeType":"229","endLine":80,"endColumn":125},{"ruleId":"207","severity":1,"message":"208","line":11,"column":11,"nodeType":"209","messageId":"210","endLine":11,"endColumn":16},{"ruleId":"211","severity":1,"message":"247","line":40,"column":6,"nodeType":"213","endLine":40,"endColumn":11,"suggestions":"249"},{"ruleId":"207","severity":1,"message":"250","line":2,"column":10,"nodeType":"209","messageId":"210","endLine":2,"endColumn":14},{"ruleId":"207","severity":1,"message":"251","line":6,"column":13,"nodeType":"209","messageId":"210","endLine":6,"endColumn":21},{"ruleId":"211","severity":1,"message":"237","line":28,"column":8,"nodeType":"213","endLine":28,"endColumn":21,"suggestions":"252"},{"ruleId":"207","severity":1,"message":"246","line":1,"column":27,"nodeType":"209","messageId":"210","endLine":1,"endColumn":37},{"ruleId":"207","severity":1,"message":"253","line":1,"column":17,"nodeType":"209","messageId":"210","endLine":1,"endColumn":25},{"ruleId":"207","severity":1,"message":"246","line":1,"column":27,"nodeType":"209","messageId":"210","endLine":1,"endColumn":37},{"ruleId":"207","severity":1,"message":"250","line":2,"column":10,"nodeType":"209","messageId":"210","endLine":2,"endColumn":14},{"ruleId":"207","severity":1,"message":"254","line":4,"column":10,"nodeType":"209","messageId":"210","endLine":4,"endColumn":21},{"ruleId":"211","severity":1,"message":"237","line":23,"column":8,"nodeType":"213","endLine":23,"endColumn":10,"suggestions":"255"},{"ruleId":"223","severity":1,"message":"224","line":39,"column":35,"nodeType":"225","messageId":"226","endLine":39,"endColumn":37},{"ruleId":"223","severity":1,"message":"224","line":65,"column":35,"nodeType":"225","messageId":"226","endLine":65,"endColumn":37},{"ruleId":"223","severity":1,"message":"224","line":92,"column":35,"nodeType":"225","messageId":"226","endLine":92,"endColumn":37},{"ruleId":"223","severity":1,"message":"224","line":139,"column":35,"nodeType":"225","messageId":"226","endLine":139,"endColumn":37},{"ruleId":"227","severity":1,"message":"228","line":172,"column":37,"nodeType":"229","endLine":172,"endColumn":131},{"ruleId":"223","severity":1,"message":"224","line":175,"column":64,"nodeType":"225","messageId":"226","endLine":175,"endColumn":66},{"ruleId":"227","severity":1,"message":"228","line":207,"column":37,"nodeType":"229","endLine":209,"endColumn":39},{"ruleId":"230","severity":1,"message":"231","line":224,"column":71,"nodeType":"232","messageId":"233","endLine":224,"endColumn":73},{"ruleId":"223","severity":1,"message":"234","line":225,"column":65,"nodeType":"225","messageId":"226","endLine":225,"endColumn":67},{"ruleId":"223","severity":1,"message":"224","line":225,"column":94,"nodeType":"225","messageId":"226","endLine":225,"endColumn":96},{"ruleId":"223","severity":1,"message":"234","line":229,"column":72,"nodeType":"225","messageId":"226","endLine":229,"endColumn":74},{"ruleId":"223","severity":1,"message":"224","line":12,"column":20,"nodeType":"225","messageId":"226","endLine":12,"endColumn":22},{"ruleId":"223","severity":1,"message":"224","line":19,"column":20,"nodeType":"225","messageId":"226","endLine":19,"endColumn":22},{"ruleId":"223","severity":1,"message":"224","line":25,"column":19,"nodeType":"225","messageId":"226","endLine":25,"endColumn":21},{"ruleId":"223","severity":1,"message":"224","line":11,"column":57,"nodeType":"225","messageId":"226","endLine":11,"endColumn":59},{"ruleId":"223","severity":1,"message":"224","line":94,"column":46,"nodeType":"225","messageId":"226","endLine":94,"endColumn":48},{"ruleId":"227","severity":1,"message":"228","line":133,"column":29,"nodeType":"229","endLine":133,"endColumn":184},{"ruleId":"207","severity":1,"message":"256","line":9,"column":12,"nodeType":"209","messageId":"210","endLine":9,"endColumn":21},{"ruleId":"227","severity":1,"message":"228","line":49,"column":25,"nodeType":"229","endLine":49,"endColumn":50},{"ruleId":"207","severity":1,"message":"257","line":12,"column":12,"nodeType":"209","messageId":"210","endLine":12,"endColumn":24},{"ruleId":"207","severity":1,"message":"258","line":12,"column":25,"nodeType":"209","messageId":"210","endLine":12,"endColumn":40},{"ruleId":"211","severity":1,"message":"259","line":30,"column":7,"nodeType":"213","endLine":30,"endColumn":9,"suggestions":"260"},{"ruleId":"203","replacedBy":"261"},{"ruleId":"205","replacedBy":"262"},"no-native-reassign",["263"],"no-negated-in-lhs",["264"],"no-unused-vars","'state' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'dispatch' and 'history'. Either include them or remove the dependency array.","ArrayExpression",["265"],"'useEffect' is defined but never used.","'history' is assigned a value but never used.","'image' is assigned a value but never used.","'Setimage' is assigned a value but never used.","'url' is assigned a value but never used.","'setUrl' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["266"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","Expected '!==' and instead saw '!='.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","React Hook useEffect has a missing dependency: 'userid'. Either include it or remove the dependency array.",["267"],"no-mixed-operators","Unexpected mix of '||' and '&&'.","LogicalExpression","unexpectedMixedOperator","'data' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'body', 'getprivacy', 'history', 'title', and 'userprofile'. Either include them or remove the dependency array.",["268"],"'useContext' is defined but never used.","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["269"],["270"],"'Link' is defined but never used.","'dispatch' is assigned a value but never used.",["271"],"'useState' is defined but never used.","'UserContext' is defined but never used.",["272"],"'messageid' is assigned a value but never used.","'sentMessages' is assigned a value but never used.","'Setsentmessages' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["273"],["263"],["264"],"no-global-assign","no-unsafe-negation",{"desc":"274","fix":"275"},{"desc":"276","fix":"277"},{"desc":"278","fix":"279"},{"desc":"280","fix":"281"},{"desc":"282","fix":"283"},{"desc":"282","fix":"284"},{"desc":"285","fix":"286"},{"desc":"287","fix":"288"},{"desc":"289","fix":"290"},"Update the dependencies array to be: [dispatch, history]",{"range":"291","text":"292"},"Update the dependencies array to be: [dispatch]",{"range":"293","text":"294"},"Update the dependencies array to be: [requser, userid]",{"range":"295","text":"296"},"Update the dependencies array to be: [body, getprivacy, history, title, url, userprofile]",{"range":"297","text":"298"},"Update the dependencies array to be: [history, url]",{"range":"299","text":"300"},{"range":"301","text":"300"},"Update the dependencies array to be: [deleteStory, userid]",{"range":"302","text":"303"},"Update the dependencies array to be: [userid]",{"range":"304","text":"305"},"Update the dependencies array to be: [id]",{"range":"306","text":"307"},[2103,2105],"[dispatch, history]",[1643,1645],"[dispatch]",[820,829],"[requser, userid]",[1486,1491],"[body, getprivacy, history, title, url, userprofile]",[998,1003],"[history, url]",[1178,1183],[1075,1088],"[deleteStory, userid]",[802,804],"[userid]",[1103,1105],"[id]"]